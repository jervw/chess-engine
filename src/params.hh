#pragma once

// Engine parameters

namespace Params {

	// Tile values
	const int TILE_PAWN[8][8] = {
		{ 0,  0,  0,  0,  0,  0,  0,  0 },
		{ 50, 50, 50, 50, 50, 50, 50, 50 },
		{ 10, 10, 20, 30, 30, 20, 10, 10 },
		{  5,  5, 10, 25, 25, 10,  5,  5 },
		{  0,  0,  0, 20, 20,  0,  0,  0 },
		{  5, -5,-10,  0,  0,-10, -5,  5 },
		{  5, 10, 10,-20,-20, 10, 10,  5 },
		{  0,  0,  0,  0,  0,  0,  0,  0 }
	};
	const int TILE_KNIGHT[8][8] = {
		{ -50,-40,-30,-30,-30,-30,-40,-50 },
		{ -40,-20,  0,  0,  0,  0,-20,-40 },
		{ -30,  0, 10, 15, 15, 10,  0,-30 },
		{ -30,  5, 15, 20, 20, 15,  5,-30 },
		{ -30,  0, 15, 20, 20, 15,  0,-30 },
		{ -30,  5, 10, 15, 15, 10,  5,-30 },
		{ -40,-20,  0,  5,  5,  0,-20,-40 },
		{ -50,-40,-30,-30,-30,-30,-40,-50 }
	};
	const int TILE_BISHOP[8][8] = {
		{ -20,-10,-10,-10,-10,-10,-10,-20 },
		{ -10,  0,  0,  0,  0,  0,  0,-10 },
		{ -10,  0,  5, 10, 10,  5,  0,-10 },
		{ -10,  5,  5, 10, 10,  5,  5,-10 },
		{ -10,  0, 10, 10, 10, 10,  0,-10 },
		{ -10, 10, 10, 10, 10, 10, 10,-10 },
		{ -10,  5,  0,  0,  0,  0,  5,-10 },
		{ -20,-10,-10,-10,-10,-10,-10,-20 }
	};
	const int TILE_ROOK[8][8] = {
		{  0,  0,  0,  0,  0,  0,  0,  0 },
		{  5, 10, 10, 10, 10, 10, 10,  5 },
		{ -5,  0,  0,  0,  0,  0,  0, -5 },
		{ -5,  0,  0,  0,  0,  0,  0, -5 },
		{ -5,  0,  0,  0,  0,  0,  0, -5 },
		{ -5,  0,  0,  0,  0,  0,  0, -5 },
		{ -5,  0,  0,  0,  0,  0,  0, -5 },
		{  0,  0,  0,  5,  5,  0,  0,  0 }
	};
	const int TILE_QUEEN[8][8] = {
		{ -20,-10,-10, -5, -5,-10,-10,-20 },
		{ -10,  0,  0,  0,  0,  0,  0,-10 },
		{ -10,  0,  5,  5,  5,  5,  0,-10 },
		{  -5,  0,  5,  5,  5,  5,  0, -5 },
		{   0,  0,  5,  5,  5,  5,  0, -5 },
		{ -10,  5,  5,  5,  5,  5,  0,-10 },
		{ -10,  0,  5,  0,  0,  0,  0,-10 },
		{ -20,-10,-10, -5, -5,-10,-10,-20 }
	};
	const int TILE_KING_MID[8][8] = {
		{ -30,-40,-40,-50,-50,-40,-40,-30},
		{ -30,-40,-40,-50,-50,-40,-40,-30},
		{ -30,-40,-40,-50,-50,-40,-40,-30},
		{ -30,-40,-40,-50,-50,-40,-40,-30},
		{ -20,-30,-30,-40,-40,-30,-30,-20},
		{ -10,-20,-20,-20,-20,-20,-20,-10},
		{ 20, 20,  0,  0,  0,  0, 20, 20},
		{ 20, 30, 10,  0,  0, 10, 30, 20}
	};

	const int TILE_KING_END[8][8] = {
		{ -50,-40,-30,-20,-20,-30,-40,-50 },
		{ -30,-20,-10,  0,  0,-10,-20,-30 },
		{ -30,-10, 20, 30, 30, 20,-10,-30 },
		{ -30,-10, 30, 40, 40, 30,-10,-30 },
		{ -30,-10, 30, 40, 40, 30,-10,-30 },
		{ -30,-10, 20, 30, 30, 20,-10,-30 },
		{ -30,-30,  0,  0,  0,  0,-30,-30 },
		{ -50,-30,-30,-30,-30,-30,-30,-50 }
	};

	// Piece values
	const static unsigned PAWN = 1; // for pawns
	const static unsigned KNIGHT = 3; // for knights
	const static unsigned BISHOP = 3; // for bishops
	const static unsigned ROOK = 5; // for rooks
	const static unsigned QUEEN = 9; // for queens
	const static unsigned KING = 100; // for kings


	// size of the buffer used by the engine to store the board
	const static unsigned BUFFER_SIZE = 3;

	// Weights for evaluation
	const static int C1 = 12; // for material value
	const static int C2 = 1; // for mobility value
	const static int C3 = 3; // for pawn rank value

	// Game states
	const static int STALEMATE = 0;
	const static int DRAW = 0;
	const static int CHECK = 2;

	const static int CHECKMATE = (CHECK * ((C1 * 103) + (C2 * 215) + (C3 * 48))) + 1;
}
